---
  name: Create release

  on: workflow_dispatch

  jobs:
    test_code:
      name: test code
      uses: ./.github/workflows/test_code.yml

    create_release:
      name: Create release
      runs-on: ubuntu-latest
      needs: [test_code]
      env:
        PYTHON_VERSION: "3.12"

      steps:
        - name: Get bypass token
          id: get_bypass_token
          uses: peter-murray/workflow-application-token-action@v3.0.0
          with:
            application_id: ${{ secrets.WORKFLOW_ASSISTANT_APP_ID }}
            application_private_key: ${{ secrets.WORKFLOW_ASSISTANT_PRIVATE_KEY }}

        - name: Check out repository
          uses: actions/checkout@v4.2.1
          with:
            fetch-depth: 0
            token: ${{ steps.get_bypass_token.outputs.token }}

        - name: Update license year
          uses: FantasticFiasco/action-update-license-year@v3.0.2
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - name: Merge license year pull request
          continue-on-error: true
          env:
            GITHUB_TOKEN: ${{ steps.get_bypass_token.outputs.token }}

          run: gh pr merge --squash --delete-branch --admin

        - name: Check out repository
          uses: actions/checkout@v4.2.1
          with:
            token: ${{ steps.get_bypass_token.outputs.token }}

        - name: Bump version and create changelog
          id: commitizen
          uses: commitizen-tools/commitizen-action@0.21.0
          with:
            github_token: ${{ steps.get_bypass_token.outputs.token }}
            changelog_increment_filename: body.md

        - name: Install uv
          uses: astral-sh/setup-uv@v3.1.4
          with:
            enable-cache: true

        - name: Set up Python ${{ env.PYTHON_VERSION }}
          run: uv python install ${{ env.PYTHON_VERSION }}

        - name: Install the project
          run: uv sync --all-extras --dev

        - name: Build python package
          run: uv build

        - name: Publish python packages
          run: uv publish
          env:
            UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}

        - name: Create github release
          uses: softprops/action-gh-release@v2.0.8
          with:
            body_path: body.md
            tag_name: ${{ steps.commitizen.outputs.version }}
            files: |
              dist/*.whl
              dist/*.tar.gz
              LICENSE
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
